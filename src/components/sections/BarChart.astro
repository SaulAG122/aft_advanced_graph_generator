---
import Info from "../../components/ui/Info.astro";
import Bar from "../../components/ui/Bar.astro";
import Line from "../../components/ui/Line.astro";

const { surveyId, participantId } = Astro.props;

interface Competencia {
  titulo: string;
  valor: number;
  promedio: number;
  minimo: number;
  maximo: number;
  descripcion: string;
  color: string;
}

let chartData: Competencia[] = [];
let error = false;
let loading = true;

if (surveyId && participantId) {
  try {
    const response = await fetch(
      `https://aft-dashboard.apps.darideveloper.com/api/bar-chart/?survey_id=${surveyId}&participant_id=${participantId}`,
      {
        method: "GET",
        headers: {
          Authorization: `Token ${import.meta.env.API_TOKEN}`,
        },
      }
    );

    const result = await response.json();
    console.log(result.data)

    chartData = result.data ?? [];
  } catch (err) {
    console.error("Error al obtener datos:", err);
    error = true;
  } finally {
    loading = false;
  }
}

function calculatePercentage(valor: number): number {
  return (valor / 10) * 100;
}
---

<div class:list={["w-full", "max-w-7xl", "mx-auto", "p-6", "bg-white"]}>
  {loading && <p class="text-center text-gray-600">Cargando datos...</p>}
  {
    error && (
      <p class="text-center text-red-500">
        Error al cargar los datos. Intenta de nuevo.
      </p>
    )
  }
  {
    !loading && !error && chartData.length === 0 && (
      <p class="text-center text-gray-600">
        No se encontraron datos para este participante.
      </p>
    )
  }

  {
    !loading && !error && chartData.length > 0 && (
      <div class:list={["space-y-2"]}>
        {chartData.map((item) => (
          <div
            class:list={[
              "flex",
              "flex-col",
              "sm:flex-row",
              "gap-4",
              "items-start sm:items-center",
            ]}
          >
            <div class:list={["w-5/12"]}>
              <Info
                title={item.titulo}
                description={item.descripcion}
                color={item.color}
              />
            </div>

            <div class:list={["w-7/12", "relative"]}>
              <div class:list={["relative"]}>
                <Bar
                  value={item.valor}
                  color={item.color}
                  percentage={calculatePercentage(item.valor)}
                  promedio={item.promedio}
                />

                <Line position={4} color="bg-tech-red" />
                <Line position={7} color="bg-tech-green" />
                <Line position={10} color="bg-tech-blue" />
              </div>
            </div>
          </div>
        ))}
      </div>
    )
  }
</div>
